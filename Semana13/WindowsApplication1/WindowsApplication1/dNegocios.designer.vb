'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18444
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Negocios2014")>  _
Partial Public Class dNegociosDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertproductos(instance As productos)
    End Sub
  Partial Private Sub Updateproductos(instance As productos)
    End Sub
  Partial Private Sub Deleteproductos(instance As productos)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.WindowsApplication1.My.MySettings.Default.Negocios2014ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property productos() As System.Data.Linq.Table(Of productos)
		Get
			Return Me.GetTable(Of productos)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_CLIENTESXPAIS")>  _
	Public Function SP_CLIENTESXPAIS(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PAIS", DbType:="Char(3)")> ByVal pAIS As String) As ISingleResult(Of SP_CLIENTESXPAISResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pAIS)
		Return CType(result.ReturnValue,ISingleResult(Of SP_CLIENTESXPAISResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_LISTACATEGORIAS")>  _
	Public Function SP_LISTACATEGORIAS() As ISingleResult(Of SP_LISTACATEGORIASResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_LISTACATEGORIASResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_LISTACLIENTES")>  _
	Public Function SP_LISTACLIENTES() As ISingleResult(Of SP_LISTACLIENTESResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_LISTACLIENTESResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_LISTAPAIS")>  _
	Public Function SP_LISTAPAIS() As ISingleResult(Of SP_LISTAPAISResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_LISTAPAISResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_LISTAPRODUCTOS")>  _
	Public Function SP_LISTAPRODUCTOS() As ISingleResult(Of SP_LISTAPRODUCTOSResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_LISTAPRODUCTOSResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_LISTAPROVEEDORES")>  _
	Public Function SP_LISTAPROVEEDORES() As ISingleResult(Of SP_LISTAPROVEEDORESResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_LISTAPROVEEDORESResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_ULTIMOPRODUCTO")>  _
	Public Function SP_ULTIMOPRODUCTO() As ISingleResult(Of SP_ULTIMOPRODUCTOResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SP_ULTIMOPRODUCTOResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Compras.productos")>  _
Partial Public Class productos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProducto As Integer
	
	Private _NomProducto As String
	
	Private _IdProveedor As System.Nullable(Of Integer)
	
	Private _IdCategoria As System.Nullable(Of Integer)
	
	Private _CantxUnidad As String
	
	Private _PrecioUnidad As Decimal
	
	Private _UnidadesEnExistencia As Short
	
	Private _UnidadesEnPedido As Short
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProductoChanged()
    End Sub
    Partial Private Sub OnNomProductoChanging(value As String)
    End Sub
    Partial Private Sub OnNomProductoChanged()
    End Sub
    Partial Private Sub OnIdProveedorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProveedorChanged()
    End Sub
    Partial Private Sub OnIdCategoriaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCategoriaChanged()
    End Sub
    Partial Private Sub OnCantxUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnCantxUnidadChanged()
    End Sub
    Partial Private Sub OnPrecioUnidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecioUnidadChanged()
    End Sub
    Partial Private Sub OnUnidadesEnExistenciaChanging(value As Short)
    End Sub
    Partial Private Sub OnUnidadesEnExistenciaChanged()
    End Sub
    Partial Private Sub OnUnidadesEnPedidoChanging(value As Short)
    End Sub
    Partial Private Sub OnUnidadesEnPedidoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProducto", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProducto() As Integer
		Get
			Return Me._IdProducto
		End Get
		Set
			If ((Me._IdProducto = value)  _
						= false) Then
				Me.OnIdProductoChanging(value)
				Me.SendPropertyChanging
				Me._IdProducto = value
				Me.SendPropertyChanged("IdProducto")
				Me.OnIdProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomProducto", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomProducto() As String
		Get
			Return Me._NomProducto
		End Get
		Set
			If (String.Equals(Me._NomProducto, value) = false) Then
				Me.OnNomProductoChanging(value)
				Me.SendPropertyChanging
				Me._NomProducto = value
				Me.SendPropertyChanged("NomProducto")
				Me.OnNomProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProveedor", DbType:="Int")>  _
	Public Property IdProveedor() As System.Nullable(Of Integer)
		Get
			Return Me._IdProveedor
		End Get
		Set
			If (Me._IdProveedor.Equals(value) = false) Then
				Me.OnIdProveedorChanging(value)
				Me.SendPropertyChanging
				Me._IdProveedor = value
				Me.SendPropertyChanged("IdProveedor")
				Me.OnIdProveedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int")>  _
	Public Property IdCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdCategoria
		End Get
		Set
			If (Me._IdCategoria.Equals(value) = false) Then
				Me.OnIdCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdCategoria = value
				Me.SendPropertyChanged("IdCategoria")
				Me.OnIdCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantxUnidad", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CantxUnidad() As String
		Get
			Return Me._CantxUnidad
		End Get
		Set
			If (String.Equals(Me._CantxUnidad, value) = false) Then
				Me.OnCantxUnidadChanging(value)
				Me.SendPropertyChanging
				Me._CantxUnidad = value
				Me.SendPropertyChanged("CantxUnidad")
				Me.OnCantxUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioUnidad", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property PrecioUnidad() As Decimal
		Get
			Return Me._PrecioUnidad
		End Get
		Set
			If ((Me._PrecioUnidad = value)  _
						= false) Then
				Me.OnPrecioUnidadChanging(value)
				Me.SendPropertyChanging
				Me._PrecioUnidad = value
				Me.SendPropertyChanged("PrecioUnidad")
				Me.OnPrecioUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnExistencia", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnExistencia() As Short
		Get
			Return Me._UnidadesEnExistencia
		End Get
		Set
			If ((Me._UnidadesEnExistencia = value)  _
						= false) Then
				Me.OnUnidadesEnExistenciaChanging(value)
				Me.SendPropertyChanging
				Me._UnidadesEnExistencia = value
				Me.SendPropertyChanged("UnidadesEnExistencia")
				Me.OnUnidadesEnExistenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnPedido", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnPedido() As Short
		Get
			Return Me._UnidadesEnPedido
		End Get
		Set
			If ((Me._UnidadesEnPedido = value)  _
						= false) Then
				Me.OnUnidadesEnPedidoChanging(value)
				Me.SendPropertyChanging
				Me._UnidadesEnPedido = value
				Me.SendPropertyChanged("UnidadesEnPedido")
				Me.OnUnidadesEnPedidoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class SP_CLIENTESXPAISResult
	
	Private _IdCliente As String
	
	Private _NomCliente As String
	
	Private _DirCliente As String
	
	Private _idpais As String
	
	Private _fonoCliente As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				Me._IdCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomCliente", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomCliente() As String
		Get
			Return Me._NomCliente
		End Get
		Set
			If (String.Equals(Me._NomCliente, value) = false) Then
				Me._NomCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirCliente", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property DirCliente() As String
		Get
			Return Me._DirCliente
		End Get
		Set
			If (String.Equals(Me._DirCliente, value) = false) Then
				Me._DirCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idpais", DbType:="Char(3)")>  _
	Public Property idpais() As String
		Get
			Return Me._idpais
		End Get
		Set
			If (String.Equals(Me._idpais, value) = false) Then
				Me._idpais = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fonoCliente", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property fonoCliente() As String
		Get
			Return Me._fonoCliente
		End Get
		Set
			If (String.Equals(Me._fonoCliente, value) = false) Then
				Me._fonoCliente = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_LISTACATEGORIASResult
	
	Private _IdCategoria As Integer
	
	Private _NombreCategoria As String
	
	Private _Descripcion As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int NOT NULL")>  _
	Public Property IdCategoria() As Integer
		Get
			Return Me._IdCategoria
		End Get
		Set
			If ((Me._IdCategoria = value)  _
						= false) Then
				Me._IdCategoria = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCategoria", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreCategoria() As String
		Get
			Return Me._NombreCategoria
		End Get
		Set
			If (String.Equals(Me._NombreCategoria, value) = false) Then
				Me._NombreCategoria = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_LISTACLIENTESResult
	
	Private _IdCliente As String
	
	Private _NomCliente As String
	
	Private _DirCliente As String
	
	Private _idpais As String
	
	Private _fonoCliente As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				Me._IdCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomCliente", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomCliente() As String
		Get
			Return Me._NomCliente
		End Get
		Set
			If (String.Equals(Me._NomCliente, value) = false) Then
				Me._NomCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirCliente", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property DirCliente() As String
		Get
			Return Me._DirCliente
		End Get
		Set
			If (String.Equals(Me._DirCliente, value) = false) Then
				Me._DirCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idpais", DbType:="Char(3)")>  _
	Public Property idpais() As String
		Get
			Return Me._idpais
		End Get
		Set
			If (String.Equals(Me._idpais, value) = false) Then
				Me._idpais = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fonoCliente", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property fonoCliente() As String
		Get
			Return Me._fonoCliente
		End Get
		Set
			If (String.Equals(Me._fonoCliente, value) = false) Then
				Me._fonoCliente = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_LISTAPAISResult
	
	Private _Idpais As String
	
	Private _NombrePais As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idpais", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Idpais() As String
		Get
			Return Me._Idpais
		End Get
		Set
			If (String.Equals(Me._Idpais, value) = false) Then
				Me._Idpais = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombrePais", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NombrePais() As String
		Get
			Return Me._NombrePais
		End Get
		Set
			If (String.Equals(Me._NombrePais, value) = false) Then
				Me._NombrePais = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_LISTAPRODUCTOSResult
	
	Private _IdProducto As Integer
	
	Private _NomProducto As String
	
	Private _IdProveedor As System.Nullable(Of Integer)
	
	Private _IdCategoria As System.Nullable(Of Integer)
	
	Private _CantxUnidad As String
	
	Private _PrecioUnidad As Decimal
	
	Private _UnidadesEnExistencia As Short
	
	Private _UnidadesEnPedido As Short
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProducto", DbType:="Int NOT NULL")>  _
	Public Property IdProducto() As Integer
		Get
			Return Me._IdProducto
		End Get
		Set
			If ((Me._IdProducto = value)  _
						= false) Then
				Me._IdProducto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomProducto", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomProducto() As String
		Get
			Return Me._NomProducto
		End Get
		Set
			If (String.Equals(Me._NomProducto, value) = false) Then
				Me._NomProducto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProveedor", DbType:="Int")>  _
	Public Property IdProveedor() As System.Nullable(Of Integer)
		Get
			Return Me._IdProveedor
		End Get
		Set
			If (Me._IdProveedor.Equals(value) = false) Then
				Me._IdProveedor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int")>  _
	Public Property IdCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdCategoria
		End Get
		Set
			If (Me._IdCategoria.Equals(value) = false) Then
				Me._IdCategoria = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantxUnidad", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CantxUnidad() As String
		Get
			Return Me._CantxUnidad
		End Get
		Set
			If (String.Equals(Me._CantxUnidad, value) = false) Then
				Me._CantxUnidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioUnidad", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property PrecioUnidad() As Decimal
		Get
			Return Me._PrecioUnidad
		End Get
		Set
			If ((Me._PrecioUnidad = value)  _
						= false) Then
				Me._PrecioUnidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnExistencia", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnExistencia() As Short
		Get
			Return Me._UnidadesEnExistencia
		End Get
		Set
			If ((Me._UnidadesEnExistencia = value)  _
						= false) Then
				Me._UnidadesEnExistencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnPedido", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnPedido() As Short
		Get
			Return Me._UnidadesEnPedido
		End Get
		Set
			If ((Me._UnidadesEnPedido = value)  _
						= false) Then
				Me._UnidadesEnPedido = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_LISTAPROVEEDORESResult
	
	Private _IdProveedor As Integer
	
	Private _NomProveedor As String
	
	Private _DirProveedor As String
	
	Private _NomContacto As String
	
	Private _CargoContacto As String
	
	Private _idpais As String
	
	Private _fonoProveedor As String
	
	Private _FaxProveedor As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProveedor", DbType:="Int NOT NULL")>  _
	Public Property IdProveedor() As Integer
		Get
			Return Me._IdProveedor
		End Get
		Set
			If ((Me._IdProveedor = value)  _
						= false) Then
				Me._IdProveedor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomProveedor", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomProveedor() As String
		Get
			Return Me._NomProveedor
		End Get
		Set
			If (String.Equals(Me._NomProveedor, value) = false) Then
				Me._NomProveedor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirProveedor", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property DirProveedor() As String
		Get
			Return Me._DirProveedor
		End Get
		Set
			If (String.Equals(Me._DirProveedor, value) = false) Then
				Me._DirProveedor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomContacto", DbType:="VarChar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property NomContacto() As String
		Get
			Return Me._NomContacto
		End Get
		Set
			If (String.Equals(Me._NomContacto, value) = false) Then
				Me._NomContacto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CargoContacto", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CargoContacto() As String
		Get
			Return Me._CargoContacto
		End Get
		Set
			If (String.Equals(Me._CargoContacto, value) = false) Then
				Me._CargoContacto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idpais", DbType:="Char(3)")>  _
	Public Property idpais() As String
		Get
			Return Me._idpais
		End Get
		Set
			If (String.Equals(Me._idpais, value) = false) Then
				Me._idpais = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fonoProveedor", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property fonoProveedor() As String
		Get
			Return Me._fonoProveedor
		End Get
		Set
			If (String.Equals(Me._fonoProveedor, value) = false) Then
				Me._fonoProveedor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxProveedor", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxProveedor() As String
		Get
			Return Me._FaxProveedor
		End Get
		Set
			If (String.Equals(Me._FaxProveedor, value) = false) Then
				Me._FaxProveedor = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_ULTIMOPRODUCTOResult
	
	Private _IdProducto As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProducto", DbType:="Int NOT NULL")>  _
	Public Property IdProducto() As Integer
		Get
			Return Me._IdProducto
		End Get
		Set
			If ((Me._IdProducto = value)  _
						= false) Then
				Me._IdProducto = value
			End If
		End Set
	End Property
End Class
